//
//  GamePresenter.swift
//  GameShowApp
//
//  Created by Liliane Bezerra Lima on 23/05/16.
//  Copyright (c) 2016 Gabriel Alberto. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol GamePresenterInput
{
    func presentSomething(response: GameResponse)
    func presentScore(response: GameScoreResponse)
}

protocol GamePresenterOutput: class
{
  func displaySomething(viewModel: GameViewModel)
    func displayAlertScore(viewModel: GameScoreViewModel)
}

class GamePresenter: GamePresenterInput
{
  weak var output: GamePresenterOutput!
  
  // MARK: Presentation logic
  
  func presentSomething(response: GameResponse) {
    // NOTE: Format the response from the Interactor and pass the result back to the View Controller
    
    var viewModel = GameViewModel()
    var i = 0
    viewModel.phraseQuestion = response.question!.phrase
    viewModel.level = response.question?.level
    var answers = [String]()
    for item in (response.question?.answers)! {
        answers.append(item.phrase!)
        if item.isCorrect == 1 {
            viewModel.correctPosition = i
        }
        i += 1
    }
    viewModel.answers = answers
    output.displaySomething(viewModel)
  }
    
    func presentScore(response: GameScoreResponse) {
        let textAlert = "Parabéns você acertou e ganhou \(response.score) pontos"
        var viewModel = GameScoreViewModel()
        viewModel.textAlert = textAlert
        viewModel.title = "Você acertou"
        output.displayAlertScore(viewModel)
    }
}
