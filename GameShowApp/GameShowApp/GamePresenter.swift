//
//  GamePresenter.swift
//  GameShowApp
//
//  Created by Liliane Bezerra Lima on 23/05/16.
//  Copyright (c) 2016 Gabriel Alberto. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol GamePresenterInput {
    func presentSomething(response: GameResponse)
    func presentNewTrophy(response: GameResponse.NewTrophy)
    func presentNoNewTrophy(response: GameResponse.NoNewTrophy)
}

protocol GamePresenterOutput: class {
    func displaySomething(viewModel: GameViewModel)
    func displayNewTrophies(viewModel: GameViewModel.NewTrophy)
    func displayNoNewTrophy(viewModel: GameViewModel.NoNewTrophy)
}

class GamePresenter: GamePresenterInput {
  weak var output: GamePresenterOutput!
  
  // MARK: Presentation logic
  
  func presentSomething(response: GameResponse) {
    // NOTE: Format the response from the Interactor and pass the result back to the View Controller
    
    let viewModel = GameViewModel()
    output.displaySomething(viewModel)
  }
    
    func presentNewTrophy(response: GameResponse.NewTrophy) {
        
        var viewModel = GameViewModel.NewTrophy()
        viewModel.trophies = GameResponse.NewTrophy().trophies
        
        output.displayNewTrophies(viewModel)
        
    }
    
    func presentNoNewTrophy(response: GameResponse.NoNewTrophy) {
        
        let viewModel = GameViewModel.NoNewTrophy()
        output.displayNoNewTrophy(viewModel)
        
    }
}
